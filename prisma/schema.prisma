datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-py"
}

model User {
  id         Int         @id @default(autoincrement())
  username   String      @unique
  password   String
  role       Role
  student    Student?
  instructor Instructor?
  staff      Staff?
  advisor    Advisor?
}

model Student {
  id          Int          @id @default(autoincrement())
  user        User         @relation(fields: [userId], references: [id])
  userId      Int          @unique
  name        String
  major       Major        @relation(fields: [majorId], references: [id])
  majorId     Int
  enrollments Enrollment[]
  gpa         Float        @default(0.0)
}

model Instructor {
  id           Int                  @id @default(autoincrement())
  user         User                 @relation(fields: [userId], references: [id])
  userId       Int                  @unique
  name         String
  department   Department           @relation(fields: [departmentId], references: [id])
  departmentId Int
  teachings    TeachingAssignment[]
}

model Staff {
  id           Int        @id @default(autoincrement())
  user         User       @relation(fields: [userId], references: [id])
  userId       Int        @unique
  name         String
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId Int
}

model Advisor {
  id          Int          @id @default(autoincrement())
  user        User         @relation(fields: [userId], references: [id])
  userId      Int          @unique
  name        String
  departments Department[]
}

model Department {
  id          Int          @id @default(autoincrement())
  name        String
  majors      Major[]
  staff       Staff[]
  instructors Instructor[]
  advisors    Advisor[]
}

model Major {
  id           Int        @id @default(autoincrement())
  name         String
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId Int
  students     Student[]
}

model Course {
  id          Int                  @id @default(autoincrement())
  prefix      String
  number      String
  credits     Int
  teachings   TeachingAssignment[]
  enrollments Enrollment[]

  @@unique([prefix, number])
}

model TeachingAssignment {
  id           Int        @id @default(autoincrement())
  instructor   Instructor @relation(fields: [instructorId], references: [id])
  instructorId Int
  course       Course     @relation(fields: [courseId], references: [id])
  courseId     Int
  semester     Semester
  classTime    String
}

model Enrollment {
  id        Int      @id @default(autoincrement())
  student   Student  @relation(fields: [studentId], references: [id])
  studentId Int
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  Int
  semester  Semester
  grade     Grade?
}

model OperationLog {
  id        Int           @id @default(autoincrement())
  timestamp DateTime      @default(now())
  userId    Int
  operation OperationType
  details   String
}

enum Role {
  STUDENT
  INSTRUCTOR
  STAFF
  ADVISOR
  ADMIN
}

enum Grade {
  A
  B
  C
  D
  F
  I
  S
  U
}

enum Semester {
  SPRING
  FALL
  SUMMER
}

enum OperationType {
  CREATE
  READ
  UPDATE
  DELETE
}
